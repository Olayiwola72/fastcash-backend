# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven & NPM

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true # Initialize and update submodules
        fetch-depth: 0   # Ensure all history is fetched so that submodules can be correctly checked out

    - name: Create .env file
      run: echo "${{ secrets.DOTENV_FILE_FAST_CASH }}" > .env

    - name: Load .env file
      run: |
        set -o allexport
        while IFS='=' read -r key value; do
          if [[ $value == \"*\" ]]; then
            value=${value:1:-1}  # Remove leading and trailing double quotes
          fi
          export "$key=$value"
        done < .env
        set -o allexport
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Deploy using API hook
      uses: actions/checkout@v4
      if: github.ref == 'refs/heads/main'
      env: 
        deploy_url: ${{ env.DEPLOY_HOOK_URL }}

    - run: curl "$env:deploy_url"
